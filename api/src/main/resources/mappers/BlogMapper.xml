<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC
  "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="alanisia.blog.dao.BlogDao">
  <resultMap id="BlogResultMap" type="alanisia.blog.model.Blog">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="account_id" jdbcType="BIGINT" property="accountId"/>
    <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
    <result column="title" jdbcType="VARCHAR" property="title"/>
    <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    <result column="like" jdbcType="INTEGER" property="like"/>
    <result column="star" jdbcType="INTEGER" property="star"/>
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
  </resultMap>
  <select id="newest" parameterType="java.lang.Integer" resultMap="BlogResultMap">
    select * from blog order by `create_at` desc limit #{count,jdbcType=INTEGER}
  </select>
  <select id="select" parameterType="java.lang.Long" resultMap="BlogResultMap">
    select * from blog where `id` = #{id,jdbcType=BIGINT}
  </select>
  <select id="blogs" resultMap="BlogResultMap">
    select * from blog
  </select>
  <select id="selectByCategory" resultMap="BlogResultMap">
    select * from blog where `category_id` = #{id,jdbcType=INTEGER}
      limit #{limit,jdbcType=INTEGER} offset #{offset,jdbcType=INTEGER}
      order by update_at desc
  </select>
</mapper>
